{"version":3,"sources":["hoc/AuxHoc.js","components/layout/layout.js","components/burger/burger-incredients/burger-ingredient.js","components/burger/burger.js","components/burger/build-controls/building/building.js","components/burger/build-controls/build-controls.js","components/UI/modal/modal.js","components/burger/order-summary/order-summary.js","containers/burger-builder/burger-builder.js","App.js","serviceWorker.js","index.js"],"names":["Aux","props","children","Layout","className","classes","Content","BurgerIngredient","ingredient","this","type","Component","Burger","transformedIngredient","Object","keys","map","ingKey","Array","_","i","key","reduce","arr","el","concat","length","Building","label","onClick","removed","disabled","added","controls","BuildControls","price","toFixed","eachCtrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","style","transform","show","opacity","orderSummary","ingredientSummary","igKey","textTransform","INGREDIENT_PRICE","salad","bacon","cheese","meat","BurgerBuilder","state","totalPrice","purchasing","addIngredientHandler","updatedCount","updatedIngredient","priceAddition","newPrice","setState","updatePurchasable","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","ingredients","sum","element","disableInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUAEeA,G,MAFH,SAACC,GAAD,OAAWA,EAAMC,W,gBCYdC,EAPA,SAACF,GAAD,OACX,kBAAC,EAAD,KACA,0BAAMG,UAAWC,IAAQC,SAAUL,EAAMC,Y,0CCsC9BK,G,mLAvCH,IAAIC,EAAa,KAEzB,OAAQC,KAAKR,MAAMS,MACf,IAAK,eACDF,EAAa,yBAAKJ,UAAU,gBAC5B,MACJ,IAAK,YACDI,EACI,yBAAKJ,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAGvB,MACJ,IAAK,OACGI,EAAa,yBAAKJ,UAAU,SAC5B,MACR,IAAK,SACDI,EAAa,yBAAKJ,UAAU,WAC5B,MACJ,IAAK,QACDI,EAAa,yBAAKJ,UAAU,UAC5B,MACJ,IAAK,QACDI,EAAa,yBAAKJ,UAAU,UAC5B,MACJ,QACII,EAAa,KAGrB,OAAOA,M,GAhCoBG,cCyBhBC,EAzBA,SAACX,GAGZ,IAAIY,EAAwBC,OAAOC,KAAKd,EAAMO,YAC7CQ,KAAI,SAAAC,GAED,OAAM,YAAIC,MAAMjB,EAAMO,WAAWS,KAAUD,KAAI,SAACG,EAAGC,GAEjD,OAAQ,kBAAC,EAAD,CAAkBC,IAAMJ,EAASG,EAAGV,KAAMO,UAErDK,QAAO,SAACC,EAAMC,GACb,OAAOD,EAAIE,OAAOD,KACpB,IAIF,OAHoC,IAAjCX,EAAsBa,SACrBb,EAAwB,+DAGxB,yBAAKT,UAAU,UACf,kBAAC,EAAD,CAAkBM,KAAK,cACtBG,EACD,kBAAC,EAAD,CAAkBH,KAAK,mBCThBiB,G,YAXE,SAAC1B,GAAD,OACb,yBAAKG,UAAU,gBACX,yBAAKA,UAAU,SAAUH,EAAM2B,OAC/B,4BACAxB,UAAU,OACVyB,QAAS5B,EAAM6B,QACfC,SAAU9B,EAAM8B,UAHhB,QAIA,4BAAQ3B,UAAU,OAAOyB,QAAS5B,EAAM+B,OAAxC,WCPFC,EAAW,CACb,CAACL,MAAO,QAASlB,KAAM,SACvB,CAACkB,MAAO,QAASlB,KAAM,SACvB,CAACkB,MAAO,SAAUlB,KAAM,UACxB,CAACkB,MAAO,OAAQlB,KAAM,SAuBXwB,EAnBO,SAACjC,GAAD,OAClB,yBAAKG,UAAU,iBAEf,8CAAmB,oCAAUH,EAAMkC,MAAMC,QAAQ,IAAjD,KAECH,EAASjB,KAAI,SAAAqB,GAAQ,OAClB,kBAAC,EAAD,CAAUhB,IAAKgB,EAAST,MACxBA,MAAOS,EAAST,MAEhBI,MAAO,kBAAI/B,EAAMqC,gBAAgBD,EAAS3B,OAC1CoB,QAAU,kBAAI7B,EAAMsC,kBAAkBF,EAAS3B,OAC/CqB,SAAU9B,EAAM8B,SAASM,EAAS3B,WAEtC,4BAAQN,UAAU,cAClB2B,UAAW9B,EAAMuC,YACjBX,QAAU5B,EAAMwC,SAFhB,eCdWC,G,MARF,SAACzC,GAAD,OACT,yBAAKG,UAAU,QAAQuC,MAAO,CAACC,UAAW3C,EAAM4C,KAAO,gBAAkB,qBACzEC,QAAS7C,EAAM4C,KAAO,IAAK,MAE1B5C,EAAMC,YCcI6C,EAlBK,SAAC9C,GAErB,IAAM+C,EAAmBlC,OAAOC,KAAKd,EAAMO,YACtCQ,KAAI,SAAAiC,GACD,OAAO,wBAAI5B,IAAK4B,GAAO,0BAAMN,MAAO,CAACO,cAAgB,eAA9B,IAA+CD,EAA/C,KAAhB,KAAgFhD,EAAMO,WAAWyC,OAG7G,OACC,kBAAC,EAAD,KACA,0CACA,gFACA,4BAAKD,GACL,qDCPEG,EAAkB,CACpBC,MAAM,GACNC,MAAM,GACNC,OAAO,IACPC,KAAK,IA4FMC,E,4MAnFXC,MAAQ,CACJjD,WAAW,CACP4C,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,KAAK,GAETG,WAAW,EACXlB,aAAY,EACZmB,YAAW,G,EAYfC,qBAAuB,SAAClD,GACpB,IACMmD,EADW,EAAKJ,MAAMjD,WAAWE,GACR,EACzBoD,EAAiB,eAChB,EAAKL,MAAMjD,YAElBsD,EAAkBpD,GAAQmD,EAC1B,IAAME,EAAgBZ,EAAiBzC,GAEjCsD,EADW,EAAKP,MAAMC,WACAK,EAC5B,EAAKE,SAAS,CAACP,WAAYM,EAAUxD,WAAWsD,IAChD,EAAKI,kBAAkBJ,I,EAE3BK,wBAA0B,SAACzD,GACvB,IAAM0D,EAAW,EAAKX,MAAMjD,WAAWE,GACvC,KAAG0D,GAAY,GAAf,CAGA,IAAMP,EAAeO,EAAW,EAC1BN,EAAiB,eAChB,EAAKL,MAAMjD,YAElBsD,EAAkBpD,GAAQmD,EAC1B,IAAMQ,EAAiBlB,EAAiBzC,GAElCsD,EADW,EAAKP,MAAMC,WACAW,EAC5B,EAAKJ,SAAS,CAACP,WAAYM,EAAUxD,WAAWsD,IAChD,EAAKI,kBAAkBJ,K,EAG3BQ,gBAAkB,WACd,EAAKL,SAAS,CAACN,YAAW,K,gEAxCXY,GACf,IAAMC,EAAM1D,OAAOC,KAAKwD,GAAavD,KAAI,SAAAiC,GACrC,OAAOsB,EAAYtB,MACpB3B,QAAO,SAACkD,EAAIC,GACX,OAAOD,EAAIC,IACb,GACFhE,KAAKwD,SAAS,CAACzB,YAAagC,EAAI,M,+BAsChC,IAAME,EAAW,eACVjE,KAAKgD,MAAMjD,YAElB,IAAI,IAAIa,KAAOqD,EACXA,EAAYrD,GAAOqD,EAAYrD,IAAQ,EAG3C,OACI,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAOwB,KAAMpC,KAAKgD,MAAME,YACxB,kBAAC,EAAD,CAAcnD,WAAYC,KAAKgD,MAAMjD,cAErC,kBAAC,EAAD,CAAQA,WAAaC,KAAKgD,MAAMjD,aAC5B,kBAAC,EAAD,CACA8B,gBAAiB7B,KAAKmD,qBACtBrB,kBAAoB9B,KAAK0D,wBACzBpC,SAAY2C,EACZvC,MAAO1B,KAAKgD,MAAMC,WAClBlB,YAAa/B,KAAKgD,MAAMjB,YACxBC,QAAShC,KAAK6D,uB,GAjFF3D,aCDbgE,MAVf,WACE,OACE,6BACA,kBAAC,EAAD,KACE,kBAAC,EAAD,SCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0820869a.chunk.js","sourcesContent":["const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\nimport Aux from '../../hoc/AuxHoc';\nimport classes from './layout.css';\n\n\nconst Layout = (props) =>(\n    <Aux>\n    <main className={classes.Content}>{props.children}\n    </main>\n    </Aux>\n);\n\nexport default Layout;","import React,{Component} from 'react';\nimport  './burger-ingredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component{\n    render(){\n            let ingredient = null;\n\n    switch (this.props.type) {\n        case('bread-bottom'):\n            ingredient = <div className=\"BreadBottom\"></div>;\n            break;\n        case('bread-top'):\n            ingredient = (\n                <div className=\"BreadTop\">\n                    <div className=\"Seeds1\"></div>\n                    <div className=\"Seeds2\"></div>\n                </div>\n            );\n            break;\n        case('meat'):\n                ingredient = <div className=\"Meat\"></div>;\n                break;\n        case('cheese'):\n            ingredient = <div className=\"Cheese\"></div>;\n            break;\n        case('salad'):\n            ingredient = <div className=\"Salad\"></div>;\n            break;\n        case('bacon'):\n            ingredient = <div className=\"Bacon\"></div>;\n            break;\n        default:\n            ingredient = null;\n    }\n\n    return ingredient;\n\n    }   \n};\n\nBurgerIngredient.propTypes ={\n    type : PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\nimport './burger.css';\nimport BurgerIngredient from './burger-incredients/burger-ingredient';\n\nconst Burger = (props) =>{\n    // to convert the props which is object to array\n\n    let transformedIngredient = Object.keys(props.ingredient)\n    .map(ingKey => {\n        //creating array bcz we need to make array  if cheese=2 or more...\n        return[...Array(props.ingredient[ingKey])].map((_, i)=>{\n            //(_,i) ==> _ means a black element \n          return  <BurgerIngredient key ={ingKey + i} type={ingKey} />   \n        });\n    }).reduce((arr , el) =>{\n        return arr.concat(el)\n    },[] );\n    if(transformedIngredient.length === 0){\n        transformedIngredient = <p>Please start adding incredients</p>\n    }\n    return(\n        <div className=\"Burger\">\n        <BurgerIngredient type=\"bread-top\"/>\n        {transformedIngredient}\n        <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n}\n\nexport default Burger;","import React from 'react';\nimport './building.css'\n\n\nconst Building = (props) =>(\n    <div className=\"BuildControl\">\n        <div className=\"Label\" >{props.label}</div>\n        <button \n        className=\"Less\" \n        onClick={props.removed} \n        disabled={props.disabled}>Less</button>\n        <button className=\"More\" onClick={props.added}>More</button>\n    </div>\n)\n\nexport default Building;","import React from 'react';\nimport './build-controls.css';\nimport Building from './building/building';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'}\n];\n\n\nconst BuildControls = (props) => (\n    <div className=\"BuildControls\">\n   \n    <p>Current Price : <strong> {props.price.toFixed(2)}</strong> </p>\n\n    {controls.map(eachCtrl => (\n        <Building key={eachCtrl.label} \n        label={eachCtrl.label}\n        //type={eachCtrl.type} insteadof doing this passing like below\n        added={()=>props.ingredientAdded(eachCtrl.type)}\n        removed ={()=>props.ingredientRemoved(eachCtrl.type)}\n        disabled={props.disabled[eachCtrl.type]}/>\n    ))}\n    <button className=\"OrderButton\"\n    disabled={!props.purchasable}\n    onClick ={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default BuildControls;","import React from 'react';\nimport './modal.css';\n\nconst Modal =(props) =>(\n    <div className=\"Modal\" style={{transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n    opacity: props.show ? '1' :'0'\n}}>\n    {props.children}\n    </div>\n);\n\nexport default Modal;","import React from 'react';\nimport Aux from '../../../hoc/AuxHoc'\n\nconst orderSummary =(props) =>{\n\nconst ingredientSummary =Object.keys(props.ingredient)\n    .map(igKey =>{\n        return <li key={igKey}><span style={{textTransform : 'capitalize'}}> {igKey} </span>: {props.ingredient[igKey]}</li>\n    })\n\n   return(\n    <Aux>\n    <h3>Your Order</h3>\n    <p>A delicious burger with the following ingredients</p>\n    <ul>{ingredientSummary}</ul>\n    <p>Continue to checkout</p>\n    </Aux>\n   ); \n\n}\n\nexport default orderSummary;\n\n// {{}} => using js in css tags","import React, {Component} from 'react';\nimport Aux from '../../hoc/AuxHoc';\nimport Burger from '../../components/burger/burger';\nimport BuildControls from '../../components/burger/build-controls/build-controls';\nimport Modal from './../../components/UI/modal/modal';\nimport OrderSummary from '../../components/burger/order-summary/order-summary';\n\n\nconst INGREDIENT_PRICE ={\n    salad:0.5,\n    bacon:0.4,\n    cheese:1.3,\n    meat:0.7\n}\n\nclass BurgerBuilder extends Component {\n    // constructor(props){\n    //     super(props);\n    //     this.state = {}\n    // }\n\n    state = {\n        ingredient:{\n            salad:0,\n            bacon:0,\n            cheese:0,\n            meat:0\n        },\n        totalPrice:5,\n        purchasable:false,\n        purchasing:false,\n    }\n\n    updatePurchasable (ingredients) {\n        const sum = Object.keys(ingredients).map(igKey =>{\n            return ingredients[igKey];\n        }).reduce((sum,element)=>{\n            return sum+element;\n        },0);\n        this.setState({purchasable: sum>0});\n    }\n\n    addIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredient[type];\n        const updatedCount = oldCount +1;\n        const updatedIngredient ={\n            ...this.state.ingredient\n        };\n        updatedIngredient[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredient:updatedIngredient})\n        this.updatePurchasable(updatedIngredient);\n    }\n    removeIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredient[type];\n        if(oldCount <= 0){\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredient ={\n            ...this.state.ingredient\n        };\n        updatedIngredient[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICE[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredient:updatedIngredient})\n        this.updatePurchasable(updatedIngredient);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing:true})\n    }\n\n    render() {\n        const disableInfo ={\n            ...this.state.ingredient\n        };\n        for(let key in disableInfo){\n            disableInfo[key] = disableInfo[key] <= 0\n        }\n        // return {salad:true , meat:false..} like this\n        return(\n            <Aux>\n            <Modal show={this.state.purchasing}>\n            <OrderSummary ingredient={this.state.ingredient} />\n            </Modal>\n            <Burger ingredient ={this.state.ingredient}/>\n                <BuildControls\n                ingredientAdded={this.addIngredientHandler}\n                ingredientRemoved ={this.removeIngredientHandler}\n                disabled = {disableInfo}\n                price={this.state.totalPrice}\n                purchasable={this.state.purchasable}\n                ordered={this.purchaseHandler}\n                />\n       \n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React from 'react';\nimport Layout from './components/layout/layout';\nimport BurgerBuilder from './containers/burger-builder/burger-builder';\n\nfunction App() {\n  return (\n    <div>\n    <Layout>\n      <BurgerBuilder/>\n    </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}